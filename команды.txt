myvenv\Scripts\activate		вход в (myvenv) 	
cd /D D:\djangogirls\

python manage.py runserver	запуск веб сервера

python manage.py makemigrations blog	объявление об изменениях в модели
python manage.py migrate blog			применить изменения в модели

cd /D d:				перейти на диск d
cd..					папка на уровень вверх
cd						путь и текуща€ папка
dir						список папок здесь
mkdir_name				создать папку name здесь
------ строки ------
>>> "Ola".upper()		все буквы строчные
'OLA'

>>> len("Ola")			количество букв или элементов списка
	


----- список (массив)------
lottery = [3, 42, 12]	создать список
len(lottery)			количество элементов списка
>>> lottery.sort()		сотировать список по возрастанию 
>>> lottery.reverse()	сотировать список по убыванию
>>> print(lottery)		печать всего списка
>>> print(lottery[0])	печать одного элемента списка
>>> lottery.append(199)	добавить новый элемент в конец списка
>>> lottery.pop(0)		удаление элемента

----- словари ---------
>>> participant = {'name': 'Ola', 'country': 'Po', 'favorite_numbers': [7, 42, 92]}		создание словаря
>>> print(participant['name'])						печать одного элемента словаря
>>> participant['favorite_language'] = 'Python'		добавить новый элемент в конец словаря
>>> len(participant)								количество элементов
>>> participant.pop('favorite_numbers')				удаление элемента

----- условия------
==	равно
!= 	не равно
>=
<=
and
or

if <условие>:
	<оператор>
elif <условие>:
	<оператор>
else:
	<оператор>


>>> a = True
>>> 5 > 2 * 2

-------функции-------
def hi(name):				объявление функции с паметром name
	print('Hi '+name+'!')	оператор
hi("ol")					вызов функции с параметром
range (<начало списка>,<конец списка>,<шаг>)

-------циклы------
girls = ['Rachel', 'Monica', 'Phoebe', 'Ola', 'You']
for name in girls:

for <переменная> in <список>:		присвоит переменной элемент списка
	<оператор>						выполнит оператор, вернется

for i in range(1, 6):				присвоит переменной число 1
	<оператор>						выполнит оператор, вернется


примеры ОШИБОК
NameError: name 'ctiy' is not defined		переменная не определена
